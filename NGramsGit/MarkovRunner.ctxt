#BlueJ class context
comment0.params=markov\ text\ size
comment0.target=void\ runModel(IMarkovModel,\ java.lang.String,\ int)
comment1.params=markov\ text\ size\ seed
comment1.target=void\ runModel(IMarkovModel,\ java.lang.String,\ int,\ int)
comment2.params=
comment2.target=void\ runEfficientMarkovN()
comment3.params=
comment3.target=void\ runMarkovN()
comment4.params=
comment4.target=void\ testHashMap()
comment4.text=\r\n\ \ \ \ \ \ \ \ public\ void\ runMarkovOne()\ {\ \r\n\ \ \ \ \ \ \ \ FileResource\ fr\ \=\ new\ FileResource();\ \r\n\ \ \ \ \ \ \ \ String\ st\ \=\ fr.asString();\ \r\n\ \ \ \ \ \ \ \ st\ \=\ st.replace('\\n',\ '\ ');\ \r\n\ \ \ \ \ \ \ \ MarkovWordOne\ markovWord\ \=\ new\ MarkovWordOne();\ \r\n\ \ \ \ \ \ \ \ runModel(markovWord,\ st,\ 120,\ 139);\ \r\n\ \ \ \ }\ \r\n\ \ \ \ \r\n\ \ \ \ public\ void\ runMarkovTwo()\ {\ \r\n\ \ \ \ \ \ \ \ FileResource\ fr\ \=\ new\ FileResource();\ \r\n\ \ \ \ \ \ \ \ String\ st\ \=\ fr.asString();\ \r\n\ \ \ \ \ \ \ \ st\ \=\ st.replace('\\n',\ '\ ');\ \r\n\ \ \ \ \ \ \ \ MarkovWordTwo\ markovWord\ \=\ new\ MarkovWordTwo();\ \r\n\ \ \ \ \ \ \ \ runModel(markovWord,\ st,\ 120,\ 832);\ \r\n\ \ \ \ }\ \r\n
comment5.params=
comment5.target=void\ testHashMapTwo()
comment6.params=
comment6.target=void\ compareMethods()
comment6.text=\r\n\ \ \ \ public\ void\ testGetFollows(){\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ String\ st\ \=\ "this\ is\ just\ a\ test\ yes\ this\ is\ a\ simple\ test";\r\n\ \ \ \ \ \ \ \ MarkovWordOne\ markovWord\ \=\ new\ MarkovWordOne();\ \r\n\ \ \ \ \ \ \ \ runModel(markovWord,\ st,\ 200);\ \r\n\ \ \ \ }\r\n\ \ \ \ public\ void\ testGetFollowsM2(){\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ String\ st\ \=\ "this\ is\ just\ a\ test\ yes\ this\ is\ a\ simple\ test";\r\n\ \ \ \ \ \ \ \ MarkovWordTwo\ markovWord\ \=\ new\ MarkovWordTwo();\ \r\n\ \ \ \ \ \ \ \ runModel(markovWord,\ st,\ 200);\ \r\n\ \ \ \ }\r\n
comment7.params=s
comment7.target=void\ printOut(java.lang.String)
numComments=8
